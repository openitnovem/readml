# SPDX-FileCopyrightText: 2022 GroupeSNCF 
#
# SPDX-License-Identifier: Apache-2.0

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Deploying to Staging
on:
  push:
    # trigger Action either on branch or tag
    tags: '[0-9]+.[0-9]+.[0-9]rc[0-9]+'
    branches: [ release ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    environment: README_GITHUB_PUBLISH_TESTPYPI
    env:
        PUSH_PYPI_TOKEN: ${{ secrets.TESTPYPI_PUSH_TOKEN }}
        PUSH_URL: 'https://test.pypi.org/legacy/'
        VERSION: ${GITHUB_REF#refs/tags/}
    strategy:
      matrix:
        python-version: [3.6]
    steps:
    - name: Checking deployment envirnoment  
      run: |
        echo GITHUB REF "${GITHUB_REF#refs}"
        echo VERSION "${{ env.VERSION }}"
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install --upgrade wheel
        python -m pip install flake8 pytest
        if [ -f requirements/requirements.txt ]; then pip install -r requirements/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Add meta_build information to package
      if: startsWith( github.ref, 'refs/tags/')
      run: |      
        python meta_build.py "${{env.VERSION}}" regex_release
        cat meta_build.json
    - name: Build wheel package
      run: |
        python setup.py sdist bdist_wheel
        echo Files created under dist/...
        ls dist/
    - name: Test package 
      run: |
        python -m pip install --upgrade twine
        twine check dist/*
    - name: Push package to Pypi
      if: startsWith( github.ref, 'refs/tags/')
      run: |
        echo Pushing package to "${{env.PUSH_URL}}"
        twine upload --username __token__ --password "${{env.PUSH_PYPI_TOKEN}}" --repository-url "${{env.PUSH_URL}}" dist/*  
